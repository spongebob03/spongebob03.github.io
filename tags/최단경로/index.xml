<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>최단경로 on Bemore</title>
    <link>https://www.bemore.dev/tags/%EC%B5%9C%EB%8B%A8%EA%B2%BD%EB%A1%9C/</link>
    <description>Recent content in 최단경로 on Bemore</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>bmofinnjake08@gmail.com (bmo)</managingEditor>
    <webMaster>bmofinnjake08@gmail.com (bmo)</webMaster>
    <copyright>©2022, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 15 May 2022 23:02:38 +0900</lastBuildDate>
    
        <atom:link href="https://www.bemore.dev/tags/%EC%B5%9C%EB%8B%A8%EA%B2%BD%EB%A1%9C/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>프림 알고리즘</title>
        <link>https://www.bemore.dev/posts/cs/algorithm/prim/</link>
        <pubDate>Sun, 15 May 2022 23:02:38 +0900</pubDate>
        <author>bmofinnjake08@gmail.com (bmo)</author>
        <atom:modified>Sun, 15 May 2022 23:02:38 +0900</atom:modified>
        <guid>https://www.bemore.dev/posts/cs/algorithm/prim/</guid>
        <description>Prim Algorithm 크루스칼이 최소비용 간선을 선택해 나간다면, 프림 알고리즘은 최소비용 간선이 있는 정점을 선택해 나간다. 시간복잡도 우선순위 큐 $O(ElogV)$ 인접행렬 $O(V^2)$ 구현 1 2 3 4</description>
        
        <dc:creator>bmo</dc:creator>
        
        
        
        
          
            
              <category>알고리즘</category>
            
          
            
              <category>그래프</category>
            
          
            
              <category>최단경로</category>
            
          
        
        
          
            
              <category>알고리즘</category>
            
          
        
        
      </item>
      
      <item>
        <title>크루스칼 알고리즘</title>
        <link>https://www.bemore.dev/posts/cs/algorithm/kruskal/</link>
        <pubDate>Sun, 15 May 2022 23:01:42 +0900</pubDate>
        <author>bmofinnjake08@gmail.com (bmo)</author>
        <atom:modified>Sun, 15 May 2022 23:01:42 +0900</atom:modified>
        <guid>https://www.bemore.dev/posts/cs/algorithm/kruskal/</guid>
        <description>MST Spanning Tree: 최소한 간선을 사용하여 그래프 내 모든 정점을 이은 트리(트리는 사이클이 없다는거 주의) n개의 정점에 n-1개의 간선이 존재하는 그래프는 트리 가중치가 있</description>
        
        <dc:creator>bmo</dc:creator>
        
        
        
        
          
            
              <category>알고리즘</category>
            
          
            
              <category>그래프</category>
            
          
            
              <category>최단경로</category>
            
          
        
        
          
            
              <category>알고리즘</category>
            
          
        
        
      </item>
      
      <item>
        <title>플로이드 와샬</title>
        <link>https://www.bemore.dev/posts/cs/algorithm/floyd/</link>
        <pubDate>Wed, 04 May 2022 21:30:53 +0900</pubDate>
        <author>bmofinnjake08@gmail.com (bmo)</author>
        <atom:modified>Wed, 04 May 2022 21:30:53 +0900</atom:modified>
        <guid>https://www.bemore.dev/posts/cs/algorithm/floyd/</guid>
        <description>Floyd Warshall 그래프의 모든 노드 쌍에 대한 최단거리를 구하는 알고리즘 모든 지점끼리의 거리를 구한다. 다이니믹 프로그래밍 기반이다. A-&amp;gt;B로 다이렉트로 가는 경</description>
        
        <dc:creator>bmo</dc:creator>
        
        
        
        
          
            
              <category>알고리즘</category>
            
          
            
              <category>그래프</category>
            
          
            
              <category>최단경로</category>
            
          
        
        
          
            
              <category>알고리즘</category>
            
          
        
        
      </item>
      
      <item>
        <title>다익스트라 알고리즘</title>
        <link>https://www.bemore.dev/posts/cs/algorithm/dijkstra/</link>
        <pubDate>Wed, 04 May 2022 21:15:37 +0900</pubDate>
        <author>bmofinnjake08@gmail.com (bmo)</author>
        <atom:modified>Wed, 04 May 2022 21:15:37 +0900</atom:modified>
        <guid>https://www.bemore.dev/posts/cs/algorithm/dijkstra/</guid>
        <description>Dijkstra 특정 시작점에서 다른 모든 정점으로 가는 최단 거리를 각각 구해주는 알고리즘 A도시에서 D도시로 가는 최단 비용(거리, 시간, 돈)을 구하는 문제에 적합한 알고리</description>
        
        <dc:creator>bmo</dc:creator>
        
        
        
        
          
            
              <category>알고리즘</category>
            
          
            
              <category>그래프</category>
            
          
            
              <category>최단경로</category>
            
          
        
        
          
            
              <category>알고리즘</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
