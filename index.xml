<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>BeMore</title>
        <link>https://spongebob03.github.io/</link>
        <description>Recent content on BeMore</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 03 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://spongebob03.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo로 개발 블로그 장만하기</title>
        <link>https://spongebob03.github.io/p/hugo%EB%A1%9C-%EA%B0%9C%EB%B0%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%9E%A5%EB%A7%8C%ED%95%98%EA%B8%B0/</link>
        <pubDate>Thu, 02 Dec 2021 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/hugo%EB%A1%9C-%EA%B0%9C%EB%B0%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%9E%A5%EB%A7%8C%ED%95%98%EA%B8%B0/</guid>
        <description>&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://blog.chodaeho.com/images/blog/2021/01/hugo-logo.png&#34; &gt;
		&lt;img src=&#34;https://blog.chodaeho.com/images/blog/2021/01/hugo-logo.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;br&gt;
SSG(Static site generator) 중 Hugo를 사용하여 블로그를 만들었다. 처음에 뭐가 뭔지 몰라서 뚱땅뚱땅 만들었다. 호스팅까지 하는데 하루 걸렸고 더 빠르게 할 수 있었지만 역시 세팅에서 시행착오를 겪었다. 그나마 Hugo여서 하루만에 할 수 있었던걸수도&amp;hellip; Hugo는 Go로 만들어져서 나중에 Go에 대해서 더 공부해보고 싶다.&lt;/p&gt;
&lt;h2 id=&#34;githubio-만들기&#34;&gt;github.io 만들기&lt;/h2&gt;
&lt;h3 id=&#34;hugo-설치하기&#34;&gt;Hugo 설치하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;brew install hugo&lt;/code&gt;&lt;br&gt;
&lt;code&gt;hugo version&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;사이트-폴더-만들기&#34;&gt;사이트 폴더 만들기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo new site blog&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;테마-붙이기&#34;&gt;테마 붙이기&lt;/h3&gt;
&lt;p&gt;테그, 카테고리 잘보이는 테마가 안보여서 그나마 stack 테마가 제일 내가 원하는 템플릿이었다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd blog
git init
git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;config.toml&lt;/code&gt;파일 삭제&lt;/p&gt;
&lt;h3 id=&#34;github-저장소-연결&#34;&gt;Github 저장소 연결&lt;/h3&gt;
&lt;p&gt;github.io 블로그를 호스팅하기 위해서는 깃헙 저장소 2개가 필요하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blog&lt;/code&gt;: 블로그 컨텐츠&lt;/li&gt;
&lt;li&gt;&lt;code&gt;깃헙id.github.io&lt;/code&gt;: 빌드된 웹사이트&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote add origin https://blog_저장소_주소
git submodule add -b main git@github.io_저장소_SSH주소 public ## SSH키 있어야함
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;블로그-사용하기&#34;&gt;블로그 사용하기&lt;/h3&gt;
&lt;p&gt;themes/exampleSite의 &lt;code&gt;content&lt;/code&gt; 폴더 내용을 복사해와서 사용.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;포스트 생성
&lt;code&gt;hugo new post/포스트제목.md&lt;/code&gt; 제목은 title 항목으로 고칠 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;댓글-기능-추가&#34;&gt;댓글 기능 추가&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;config.yaml&lt;/code&gt;의 comments 설정만으로 간단하게 추가할 수 있다. &lt;br&gt;
깃헙계정으로 댓글을 남길 수 있는 &lt;a class=&#34;link&#34; href=&#34;https://utteranc.es/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;utterances&lt;/a&gt;로 설정했다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;comments:
        enabled: true
        provider: utterances

        utterances:
            repo: 깃헙계정/깃헙계정.github.io
            issueTerm: pathname
            label: comment
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;로컬-서버-확인&#34;&gt;로컬 서버 확인&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo server (-D)&lt;/code&gt; 웹서버 실행해서 수정사항 확인&lt;/p&gt;
&lt;h3 id=&#34;host-on-github&#34;&gt;host on github&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;공식 문서&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd blog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo -t hugo-theme-stack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd public&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;커밋메시지&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin main&lt;/code&gt; -&amp;gt; 내계정.github.io에 푸시(main이 기본 브랜치명이었다)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;커밋메시지&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt; -&amp;gt; blog 저장소에 푸시&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;쉘 스크립트로 업로드 자동화&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;deploy.sh&lt;/code&gt;에 위에 매번 쓰는 커맨드를 정리&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./deploy.sh &amp;quot;커밋 메시지&amp;quot;&lt;/code&gt;&lt;br&gt;
이후에는 Gist, GithubAction&amp;hellip; 더 편하게 할 수 있는 방법 도전&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;추가할-사항&#34;&gt;추가할 사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; utterances로 댓글기능 추가&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 카테고리 사이드메뉴에 추가&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; GithubAction으로 자동화&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; hugo 기능 잘 활용하기&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 통계기능 추가&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; custom domain
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.holaxprogramming.com/2017/05/15/github-page-and-custom-domain/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.holaxprogramming.com/2017/05/15/github-page-and-custom-domain/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/#step-3-add-a-theme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo 공식문서 Quick Start&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Integerous/Integerous.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo로 Github.io 블로그 만들기&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo theme Stack doc&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://key4920.github.io/p/%EC%B4%88%EB%B3%B4%EC%9E%90-hugo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B5%AC%EC%B6%95%EA%B8%B0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;초보자 Hugo 블로그 구축기&lt;/a&gt; - 같은 테마를 사용하는 분의 블로그를 찾아서 더 수월했다.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>주요 추천 알고리즘</title>
        <link>https://spongebob03.github.io/p/%EC%A3%BC%EC%9A%94-%EC%B6%94%EC%B2%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
        <pubDate>Fri, 19 Nov 2021 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/%EC%A3%BC%EC%9A%94-%EC%B6%94%EC%B2%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
        <description>&lt;h2 id=&#34;1-content-based-filtering-cb&#34;&gt;1. Content-Based filtering: CB&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;비슷한 아이템을 기반으로 추천&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;도메인 지식 필요&lt;/li&gt;
&lt;li&gt;아이템 간의 유사도 측정하여 추천&lt;/li&gt;
&lt;li&gt;모든 이에게 동일한 아이템을 추천&lt;/li&gt;
&lt;li&gt;보통 아이템, 사용자 수가 적다&lt;/li&gt;
&lt;li&gt;hand-engineered features에서만 성능 좋음&lt;/li&gt;
&lt;li&gt;텍스트 처리 필요하기도 함(NLP) - &lt;em&gt;예.작가의 다른 책&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;핵심&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;아이템들을 어떤 정보를 기준으로 서술할 건가&lt;/li&gt;
&lt;li&gt;유사소 계산 방법 정하기 (코사인, 피어슨&amp;hellip;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-collaborative-filtering-cf&#34;&gt;2. Collaborative Filtering: CF&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;기본적으로 다른 사용자들의 정보를 이용하여 취향 예측&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-메모리-기반-nearest-neighbor-based-cf&#34;&gt;1) 메모리 기반 (=Nearest Neighbor based CF)&lt;/h3&gt;
&lt;h4 id=&#34;---사용자-기반&#34;&gt;- 👨‍👩‍👧‍👦 사용자 기반&lt;/h4&gt;
&lt;p&gt;나와 비슷한 평점 패턴을 보이는 &lt;strong&gt;사람&lt;/strong&gt;들을 찾아서 그 사람들이 높게 평가한 아이템 추천&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;나와 다른 사람 어떻게 표현할 것인가&lt;/li&gt;
&lt;li&gt;나와 비슷한 사용자를 어떻게 찾을지가 중요
&lt;ul&gt;
&lt;li&gt;사용자 프로파일 정보 구축&lt;/li&gt;
&lt;li&gt;프로파일 정보간의 유사도 계산&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;---아이템-기반&#34;&gt;- 🎨 아이템 기반&lt;/h4&gt;
&lt;p&gt;아마존에서 논문으로 발표
유사도 비교 → &lt;strong&gt;평점&lt;/strong&gt;의 패턴이 비슷한 &lt;strong&gt;아이템&lt;/strong&gt;들을 찾아서 그걸 추천하는 방식
아이템의 수가 보통 사용자 수보다 적다 → 평점의 수가 평균적으로 더 많고 계산량이 작다 → 사용자 기반보다는 덜 sparse → 사용자 기반 협업 필터링과 비교해 더 안정적이며 좋은 성능을 보임&lt;/p&gt;
&lt;h3 id=&#34;2-모델-기반&#34;&gt;2) 모델 기반&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;넷플릭스 프라이즈 컨테스트 때 고안된 추천 방식&lt;/li&gt;
&lt;li&gt;사용자 아이템 행렬에서 비어있는 평점들을 SGD를 사용해서 채우는 방식&lt;/li&gt;
&lt;li&gt;SVD(Singular Vector Decomposition)을 사용해서 구현
&lt;ul&gt;
&lt;li&gt;요즘은 딥려닝의 오토인코더를 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;평점을 포함한 다른 사용자 행동을 예측하는 방식으로 진화&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-사용자-행동-기반&#34;&gt;3) 사용자 행동 기반&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;사용자 행동(아이템 클릭 or 구매 등) 정보를 기반으로 추천
&lt;ul&gt;
&lt;li&gt;사용자, 아이템에 대한 부가 정보 필수&lt;/li&gt;
&lt;li&gt;구현 간단하지만 아주 유용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;사용자 행동을 예측하는 추천 (클릭 or 구매)
&lt;ul&gt;
&lt;li&gt;모델링을 통해 사용자와 아이템 페어에 대한 클릭 확률 등의 점수 계산 가능
&lt;ul&gt;
&lt;li&gt;의사 결정 트리나 딥러닝등이 사용 가능&lt;/li&gt;
&lt;li&gt;유데미에서 사용했던 방식&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-latent-factor-cf&#34;&gt;4) Latent Factor CF&lt;/h3&gt;
&lt;p&gt;사용자-아이템 평점 행렬 데이터만을 이용해 말 그대로 &amp;lsquo;잠재 요인&amp;rsquo;을 끄집어 내는 것&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Matrix Factorization&lt;/li&gt;
&lt;li&gt;우연한 추천 기능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-다수의-알고리즘-다양한-방식-조합&#34;&gt;3. 다수의 알고리즘: 다양한 방식 조합&lt;/h1&gt;
&lt;h1 id=&#34;4-지도학습-방식&#34;&gt;4. 지도학습 방식&lt;/h1&gt;
&lt;p&gt;어떤 기준으로 추천을 하느냐가 가장 중요 - 머신러닝의 레이블 정보!&lt;/p&gt;
&lt;p&gt;힌트&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;명시적 힌트: 리뷰점수, 좋아요&lt;/li&gt;
&lt;li&gt;암시적 힌트: 클릭, 구매, 소비
&lt;ul&gt;
&lt;li&gt;클릭보다는 구매가 더 좋은 힌트, 소비 여부도 좋은 힌트다&lt;/li&gt;
&lt;li&gt;클릭은 노이즈가 있지만 장점은 관심없는 아이템들의 파악이 쉽다&lt;/li&gt;
&lt;li&gt;자세한 사용자 행동 정보의 수집, 저장과 가공 먼저 필요&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>추천시스템이란?</title>
        <link>https://spongebob03.github.io/p/%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80/</link>
        <pubDate>Tue, 09 Nov 2021 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;사용자가 관심있어 할만한 아이템을 제공해주는 자동화된 시스템&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;핵심
&lt;ul&gt;
&lt;li&gt;관심을 어떻게 표현하는가?&lt;/li&gt;
&lt;li&gt;관심을 어떻게 측정하는가?
=&amp;gt; 유사도 측정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;사용자와-아이템&#34;&gt;사용자와 아이템&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;사용자: 서비스를 사용하는 사람&lt;/li&gt;
&lt;li&gt;아이템: 서비스에서 판매하는 물품(다른 사용자가 물품이 될 수 있음)
보통 서비스가 성장하면 사용자, 아이템의 수도 같이 성장함
&lt;ul&gt;
&lt;li&gt;특히 사용자의 성장도가 훨씬 커짐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;하지만 아이템의 수가 커지면서 아이템 디스커버리 문제가 대두
&lt;ul&gt;
&lt;li&gt;모든 사용자가 검색(능동적)을 하지 않으며 사람들이 점점 더 추천(수동적) 선호&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;필요성&#34;&gt;필요성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;조금의 노력으로 사용자가 관심있어 할만한 아이템을 찾아주는 방법
&lt;ul&gt;
&lt;li&gt;아이템의 수가 굉장히 큰 경우 더 의미가 있다&lt;/li&gt;
&lt;li&gt;수작업으론&amp;hellip;도저히 불가 → 자동화 필요!&lt;/li&gt;
&lt;li&gt;개인화(Personalization)으로 연결됨&lt;/li&gt;
&lt;li&gt;확증편향의 문제가 있을 수 있다
&lt;ul&gt;
&lt;li&gt;가끔씩 전혀 관심없을 듯한 아이템도 추천 가능(Serendipity)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;회사 관점에서는 추천 엔진을 기반으로 다양한 기능 추가 가능
&lt;ul&gt;
&lt;li&gt;마케팅시 추천 엔진 사용(이메일 마케팅)&lt;/li&gt;
&lt;li&gt;관련 상품 추천으로 쉽게 확장 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;아이템 수가 많아서 원하는 것을 찾기 쉽지 않은 경우
⇒ 검색을 위한 수고를 덜어줌&lt;/li&gt;
&lt;li&gt;추천을 통해 신상품등의 마케팅이 가능해짐
&lt;ul&gt;
&lt;li&gt;새로 나온 아이템들은 노출 자체가 어려운데 추천을 통해 기회를 줄 수 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;인기 아이템 뿐만 아니라 롱 테일의 다양한 아이템 노출이 가능
&lt;ul&gt;
&lt;li&gt;추천 방식에 따라 다르지만 개인화가 잘 되면 이게 가능해짐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;추천은-매칭-문제&#34;&gt;추천은 매칭 문제!&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;사용자에게 맞는 아이템을 매칭해주기
&lt;ul&gt;
&lt;li&gt;아이템은 서비스에 따라 달라지며 아이템이 다른 사용자가 될 수도 있음 (친구 추천, 강의 추천&amp;hellip;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;어떤 아이뎀을 추천할 것인가?
&lt;ul&gt;
&lt;li&gt;다양한 방법이 존재
&lt;ul&gt;
&lt;li&gt;지금 뜨는 아이템 추천(개인화되어 있지 않음)&lt;/li&gt;
&lt;li&gt;사용자가 마지막에 클릭했던 아이템들 다시 추천&lt;/li&gt;
&lt;li&gt;사용자가 구매했던 아이템들을 구매한 다른 사용자들이 구매한 아이템 추천 ← &lt;em&gt;협업 필터링&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;추천 UI도 굉장히 중요
&lt;ul&gt;
&lt;li&gt;추천 유닛 존재. 일르 어떤 순서로 어떻게 노출하는지가 중요&lt;/li&gt;
&lt;li&gt;구체적인 이유를 보여주는 것이 좋다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;사용자와 아이템에 대한 부가 정보들이 필요해짐&lt;/li&gt;
&lt;li&gt;아이템 부가 정보
&lt;ul&gt;
&lt;li&gt;분류 체계&lt;/li&gt;
&lt;li&gt;태그 형태로 부가정보를 유지하는 것도 아주 좋음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;사용자 프로파일 정보
&lt;ul&gt;
&lt;li&gt;개인정보: 성별, 연령대 → 콜드 스타트 문제 해결&lt;/li&gt;
&lt;li&gt;아이템 정보:
&lt;ul&gt;
&lt;li&gt;관심 카테고리와 서브 카테고리(분류체계 기반), 태그&lt;/li&gt;
&lt;li&gt;클릭 혹은 구매 아이템&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;무엇을 기준으로 추천을 할 것인가?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;일상에서-볼-수-있는-추천&#34;&gt;일상에서 볼 수 있는 추천&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;아마존 관련 상품 추천
키보드 샀다면 → 같이 쓸 마우스 추천&lt;/li&gt;
&lt;li&gt;넷플릭스 영화, 드라마 추천
이전에 봤던 작품 → 다른 드라마, 영화 추천
&lt;code&gt;추천 타이틀&lt;/code&gt;: 이 작품들 왜 추천하는지&lt;/li&gt;
&lt;li&gt;구글 검색어 자동 완성
편리, 내가 생각하지 못했던 정보로도 검색할 수 있어서
개인정보 이슈가 있었다&lt;/li&gt;
&lt;li&gt;링크드인 or 페이스북 친구 추천
&lt;ul&gt;
&lt;li&gt;사용자: 멤버&lt;/li&gt;
&lt;li&gt;아이템: 멤버
왜 추천하는지 이유를 보여준다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;스포티파이 노래, 플레이리스트 추천&lt;/li&gt;
&lt;li&gt;헬스케어 도메인의 위험 점수 계산
사용자: 의사, 간호사
아이템: 환자
어느 환자를 먼저 치료하는게 좋은지 점수로 수치화&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-공통점&#34;&gt;→ 공통점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;격자 형태 UI 사용&lt;/li&gt;
&lt;li&gt;다양한 종류의 추천 유닛 존재
&lt;ul&gt;
&lt;li&gt;일부 유닛은 개인화&lt;/li&gt;
&lt;li&gt;일부 유닛은 인기도 등 비 개인화 정보기반&lt;/li&gt;
&lt;li&gt;추천 유닛의 랭킹 중요
&lt;ul&gt;
&lt;li&gt;이 부분도 모델링하여 개인화하는 추세&lt;/li&gt;
&lt;li&gt;클릭을 최적화하고 이 데이터 수집을 위한 실험을 함
&lt;ul&gt;
&lt;li&gt;순전히 데이터 수집을 위한 온라인 테스트&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>파이토치 허브 M1 로컬에서 빌드하기</title>
        <link>https://spongebob03.github.io/p/%ED%8C%8C%EC%9D%B4%ED%86%A0%EC%B9%98-%ED%97%88%EB%B8%8C-m1-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</link>
        <pubDate>Mon, 16 Aug 2021 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/%ED%8C%8C%EC%9D%B4%ED%86%A0%EC%B9%98-%ED%97%88%EB%B8%8C-m1-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/9bow/PyTorchKR&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github) PyTorchKR&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;nvm-command-not-found&#34;&gt;nvm: command not found&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://kood-dev.tistory.com/3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;노드 버전관리 설치 및 사용법&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;find ~/.zshrc&lt;/code&gt;로 /.zshrc파일 있는지 확인&lt;/li&gt;
&lt;li&gt;&lt;code&gt;open ~/.zshrc&lt;/code&gt; 파일 열어서 아래 내용 추가&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export NVM_DIR=~/.nvm 
source $(brew --prefix nvm)/nvm.sh
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;code&gt;source ~/.zshrc&lt;/code&gt; 코드 적용&lt;/li&gt;
&lt;li&gt;nvm &amp;ndash;version으로 확인&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;rbenv-version-259-is-not-installed&#34;&gt;rbenv: version `2.5.9&#39; is not installed&lt;/h3&gt;
&lt;p&gt;brew install rbenv했지만 [이걸 또 m1이..?]
(&lt;a class=&#34;link&#34; href=&#34;https://github.com/rbenv/ruby-build/issues/1691&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/rbenv/ruby-build/issues/1691&lt;/a&gt;)
해결 방법은 간단했습니다.
&lt;code&gt;rbenv install 2.5.9&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;error-while-executing-gemgemfilepermissionerror&#34;&gt;ERROR: While executing gem&amp;hellip;Gem::FilePermissionError&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jojoldu.tistory.com/288&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mac에서 Gem::FilePermissionError 에러 발생시 해결 방법&lt;/a&gt;
~/.zshrc 파일에 아래 내용 추가&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[[ -d ~/.rbenv  ]] &amp;amp;&amp;amp; \
  export PATH=${HOME}/.rbenv/bin:${PATH} &amp;amp;&amp;amp; \
  eval &amp;quot;$(rbenv init -)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;source ~/.zshrc&lt;/code&gt;로 코드 적용&lt;/p&gt;
&lt;h3 id=&#34;bundle-install-에서-make-yarn-no-such-file-or-directory&#34;&gt;bundle install 에서 make: yarn: No such file or directory&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;npm install -g yarn&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;빌드&#34;&gt;빌드&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;make serve&lt;/code&gt;
&lt;figure 
	&gt;
	&lt;a href=&#34;https://images.velog.io/images/spongebob03/post/2d0b56cb-0994-430f-9b91-593d8f6237a0/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-08-16%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%2011.15.55.png&#34; &gt;
		&lt;img src=&#34;https://images.velog.io/images/spongebob03/post/2d0b56cb-0994-430f-9b91-593d8f6237a0/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-08-16%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%2011.15.55.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;
멘토님의 친절한 커맨드 예시와 오늘도 구글링으로 얻은 정보들에 감사하며&amp;hellip;🥳&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SlackBot으로 랜덤 문제 출제</title>
        <link>https://spongebob03.github.io/p/slackbot%EC%9C%BC%EB%A1%9C-%EB%9E%9C%EB%8D%A4-%EB%AC%B8%EC%A0%9C-%EC%B6%9C%EC%A0%9C/</link>
        <pubDate>Sun, 08 Aug 2021 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/slackbot%EC%9C%BC%EB%A1%9C-%EB%9E%9C%EB%8D%A4-%EB%AC%B8%EC%A0%9C-%EC%B6%9C%EC%A0%9C/</guid>
        <description>&lt;p&gt;스터디에서 4주 동안 배운 알고리즘 유형 문제를 정해진 시간에 풀어보는 모의 코딩테스트를 진행하고 싶었다. 백준 문제를 배운 알고리즘 내에서 랜덤으로 출제하는 슬랙 챗봇을 사용하면 재밌을거 같았다. &lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/board/view/2308&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;백준 사이트는 웹 스크래핑이 금지된다고 공지&lt;/a&gt;가 되어있어 solved.ac의 알고리즘 유형 카테고리 정보를 긁어오는 식으로 문제를 뽑아왔다. 혹시 이것도 문제가 되는지 문의해봐야겠다&amp;hellip;&lt;/p&gt;
&lt;h4 id=&#34;사용-라이브러리&#34;&gt;사용 라이브러리&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;BeautifulSoup&lt;/li&gt;
&lt;li&gt;slack_sdk&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;데이터-긁어오기&#34;&gt;데이터 긁어오기&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://images.velog.io/images/spongebob03/post/3a536885-5dc4-4497-8213-a2590ac989ad/getData.png&#34; &gt;
		&lt;img src=&#34;https://images.velog.io/images/spongebob03/post/3a536885-5dc4-4497-8213-a2590ac989ad/getData.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;출제-유형-랜덤-선택-문제-랜덤-선택&#34;&gt;출제 유형 랜덤 선택, 문제 랜덤 선택&lt;/h3&gt;
&lt;p&gt;tag의 랜덤 범위가 5인 이유는 5개 알고리즘을 배워서&amp;hellip;
&lt;figure 
	&gt;
	&lt;a href=&#34;https://images.velog.io/images/spongebob03/post/77194cbc-754d-456d-9afc-669ac3d3c9ea/random.png&#34; &gt;
		&lt;img src=&#34;https://images.velog.io/images/spongebob03/post/77194cbc-754d-456d-9afc-669ac3d3c9ea/random.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;슬랙에-텍스트-보내기&#34;&gt;슬랙에 텍스트 보내기&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://api.slack.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Slack api&lt;/a&gt; &amp;gt; create app
&lt;a class=&#34;link&#34; href=&#34;https://api.slack.com/messaging/sending&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Sending messages 문서&lt;/a&gt;
원래 slacker 모듈을 사용했는데 적용이 안되어서 찾아보니 21년부터 slacker는 지원하지 않고 slack_sdk 패키지를 사용하는 것 같다.
&lt;figure 
	&gt;
	&lt;a href=&#34;https://images.velog.io/images/spongebob03/post/f274ad9c-4d72-475d-9f35-d3c2a9b4fd8a/sendToSlack.png&#34; &gt;
		&lt;img src=&#34;https://images.velog.io/images/spongebob03/post/f274ad9c-4d72-475d-9f35-d3c2a9b4fd8a/sendToSlack.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;문제-상황-&#34;&gt;문제 상황 🤔&lt;/h3&gt;
&lt;p&gt;백준 사이트는 지나치게 많은 트래픽을 발생시키는 경우에는 사이트 이용이 정지된다고 합니다. 백준 사이트가 아닌 solved.ac의 알고리즘별 문제 목록을 긁어오는 것도 그래서인지 여러번 실행하면 아무 정보가 들어오지 않는다. 하지만 solvedac인데 왜..?&lt;/p&gt;
&lt;h3 id=&#34;개선해야할-점&#34;&gt;개선해야할 점&lt;/h3&gt;
&lt;p&gt;지금 상태는 파이썬 코드를 직접 실행시켜야 슬랙 챗봇이 실행된다. 파이썬 메인함수에서 스터디 기간동안 배운 알고리즘 유형들을 solved.ac에 있는 tag이름으로 찾아서 써줘야한다. 외부에서 간단하게 입력할 수 있었으면 좋겠다. 또한 다른 슬랙 앱처럼 슬랙에서 바로 실행시킬 수 있도록 할 필요가 있다.&lt;/p&gt;
&lt;h4 id=&#34;참고-사이트&#34;&gt;[참고 사이트]&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://yganalyst.github.io/web/slackbot1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://yganalyst.github.io/web/slackbot1/&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://corikachu.github.io/articles/python/python-slack-bot-slacker&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://corikachu.github.io/articles/python/python-slack-bot-slacker&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/os/slacker&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/os/slacker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://api.slack.com/authentication/oauth-v2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://api.slack.com/authentication/oauth-v2&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://developerdk.tistory.com/96&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://developerdk.tistory.com/96&lt;/a&gt; 슬랙커가 안먹히는 이유
&lt;a class=&#34;link&#34; href=&#34;https://api.slack.com/methods/chat.postMessage/code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://api.slack.com/methods/chat.postMessage/code&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://slack.dev/python-slack-sdk/v3-migration/index.html#from-slackclient-2-x&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://slack.dev/python-slack-sdk/v3-migration/index.html#from-slackclient-2-x&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/slack-sdk/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pypi.org/project/slack-sdk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://pythonrepo.com/repo/slackapi-python-slack-sdk-python-third-party-apis-wrappers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pythonrepo.com/repo/slackapi-python-slack-sdk-python-third-party-apis-wrappers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/slackapi/python-slack-sdk/issues/561&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/slackapi/python-slack-sdk/issues/561&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MacMini M1 에서 Homebrew 설치</title>
        <link>https://spongebob03.github.io/p/macmini-m1-%EC%97%90%EC%84%9C-homebrew-%EC%84%A4%EC%B9%98/</link>
        <pubDate>Tue, 08 Jun 2021 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/macmini-m1-%EC%97%90%EC%84%9C-homebrew-%EC%84%A4%EC%B9%98/</guid>
        <description>&lt;h2 id=&#34;homebrew&#34;&gt;Homebrew?&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/17265226/what-is-the-difference-between-installing-an-app-via-homebrew-or-installing-it&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;그냥 사이트에서 다운받는거랑 뭐가 다른가요?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;macOS용 패키지 매니저로 프로그램 설치, 업데이트, 삭제를 편하게 관리할 수 있다. (하지만 윈도우만 쓰던 나는 나중에 알았다..)&lt;/p&gt;
&lt;h3 id=&#34;m1-네이티브로-설치하려-했으나실패&#34;&gt;M1 네이티브로 설치하려 했으나..실패!&lt;/h3&gt;
&lt;p&gt;그냥 뭔가 커맨드가 안먹혀서 의문이었는데 기존 MAC을 위한 안내는 기존 실리콘칩. 내 컴퓨터는 m1칩이라 그런 것이었다.&lt;/p&gt;
&lt;h3 id=&#34;해결&#34;&gt;🛠해결&lt;/h3&gt;
&lt;p&gt;M1 네이티브로 설치하는 방법도 있으나 이전 맥 터미널과 동일하게 호환할 수 있는 Rosetta를 사용하는 방법이 제일 간단했다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;터미널앱 &amp;gt; 정보 가져오기&amp;gt; ☑️ &lt;strong&gt;Rosetta를 사용하여 열기&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://brew.sh/index_ko&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Homebrew&lt;/a&gt; 설치
&lt;code&gt;/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;참고&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=j-933jvH8sE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;설치하기 이전에 이걸 봤어야 했는데&amp;hellip;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Memory Process 기억 과정</title>
        <link>https://spongebob03.github.io/p/memory-process-%EA%B8%B0%EC%96%B5-%EA%B3%BC%EC%A0%95/</link>
        <pubDate>Wed, 02 Oct 2019 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/memory-process-%EA%B8%B0%EC%96%B5-%EA%B3%BC%EC%A0%95/</guid>
        <description>&lt;h2 id=&#34;memory-process&#34;&gt;Memory Process&lt;/h2&gt;
&lt;h2 id=&#34;단기기억의-부호화&#34;&gt;단기기억의 부호화&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Conrad&lt;/code&gt;
실험 : &lt;em&gt;발음 비슷한&lt;/em&gt; 다른 글자 혼동→자극 시각적으로 제시되었어도 기억 오류 청각적 혼동 가능성있다
&lt;ul&gt;
&lt;li&gt;결론 : 자극이 시각적이든 청각적이든 단기기억 부호화할때 청각적 코드 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Baddeley&lt;/code&gt; : 의미정보는?
실험 1 : 유사한 소리 나는 단어들 / 소리 구별되는 단어들 → &lt;em&gt;유사한 소리&lt;/em&gt; 헷갈림
실험 2 : 의미 유사 단어 / 의미 차이 자극 → 별 차이 없음
&lt;ul&gt;
&lt;li&gt;결과 : Conrad가 맞네&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shulman&lt;/code&gt;
실험 : 청각적으로 유사(Bawl,Ball) / 의미상 유사(Talk,Speak) / 리스트에 있는 단어
&lt;ul&gt;
&lt;li&gt;결과 : 둘다 비슷하게 나옴 → &lt;em&gt;청각적 부호화&lt;/em&gt; &lt;em&gt;의미 부호화&lt;/em&gt; 모두 사용됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Posner &amp;amp; Keele&lt;/code&gt;
실험 : 두 개의 글자 같은 글자인가 판단
A-a : Yes로 대답 &amp;lt; A-A : Yes로 대답시간 더 빠름
&lt;ul&gt;
&lt;li&gt;결과 : &lt;em&gt;시각 부호화도&lt;/em&gt; 안쓰는건 아니다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;결론 : 주로 청각 부호화. (시각적 부보화, 의미 부호화도 과제에 따라 일부 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;장기기억의-부호화&#34;&gt;장기기억의 부호화&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;주로 의미부호화. 정보에 맞게 융통성 있게&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Grossman &amp;amp; Eagle&lt;/code&gt;&lt;br&gt;
실험 : 의미가 비슷한 방해자극에 더 많은 오경보
&lt;ul&gt;
&lt;li&gt;결과 : 단어의 &lt;em&gt;의미가 비슷할 때&lt;/em&gt; 혼동 가능성 더 크다 → 의미 부호화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bousfield&lt;/code&gt;&lt;br&gt;
실험 : 동물15/ 직업15/ 채소15/사람이름15 뒤섞어서 제시 후 자유 회상
&lt;ul&gt;
&lt;li&gt;결과 : 같은 범주에 속한 단어들을 연속적으로 회상할 확률 더 높다 → 단어들을 &lt;em&gt;의미에 따라 범주로&lt;/em&gt; 묶어서 저장한 후 인출한다는 증거&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Frost&lt;/code&gt;&lt;br&gt;
실험 : 그림 자극 이용. (의미 범주, 시각 범주(방향)) 조작 후 자유 회상
&lt;ul&gt;
&lt;li&gt;결과 : 의미 정보 뿐 아니라 &lt;em&gt;시각 정보도&lt;/em&gt; 부호화한다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rubin&lt;/code&gt;&lt;br&gt;
실험 : 청각부호(멜로디) 이용 글(가사) 암기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;단기기억stm--장기기억ltm&#34;&gt;단기기억(STM) → 장기기억(LTM)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;how?
&lt;ul&gt;
&lt;li&gt;Attention(주의)&lt;/li&gt;
&lt;li&gt;Consolidation(응고화, 공고화)
기존에 알고 있던 지식을 새로운 정보와 연관시켜 의미부여 할 수 있는거&lt;/li&gt;
&lt;li&gt;Metamemory(상위기억)
안다는 것을 아는 것.&lt;/li&gt;
&lt;li&gt;Rehearsal
&lt;ul&gt;
&lt;li&gt;유지 되뇌기 : 단순한 기계적 되뇌기 → 효과가 적음&lt;/li&gt;
&lt;li&gt;&lt;em&gt;정교화&lt;/em&gt; 되뇌기 : 상호 의미 있게 연결하거나 기존의 정보에 통합 → 효과적
&lt;code&gt;Ebbinghaus&lt;/code&gt;: 분산학습이 정보를 장기기억에 저장하는데 더 효과적임
&lt;code&gt;Bahrick &amp;amp; Phelps&lt;/code&gt;: 학습 회기의 &lt;em&gt;시간 간격이 길수록&lt;/em&gt; 학습 내용 더 오래 기억&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;분산학습
다양한 맥락에서 학습 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;방해
&lt;ul&gt;
&lt;li&gt;interference (간섭)&lt;/li&gt;
&lt;li&gt;decay (소멸)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;정보-체제화&#34;&gt;정보 체제화&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기억술&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;범주 묶기&lt;/li&gt;
&lt;li&gt;상호작용 이미지 생성&lt;/li&gt;
&lt;li&gt;쐐기 단어법&lt;/li&gt;
&lt;li&gt;장소법&lt;/li&gt;
&lt;li&gt;머리글자로 단어 말들기&lt;/li&gt;
&lt;li&gt;머리글자로 문장 만들기&lt;/li&gt;
&lt;li&gt;핵심단어법&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Roediger&lt;/code&gt;
기억술 효과는 인출시 필요한 정보에 따라 다르고 사람마다 다르다.
자유회상, 계열회상 : 상호작용 이미지 만들기, 장소법, 쐐기 단어법 효과 &amp;gt; 개별적 심상화
→ &lt;em&gt;계열 회상에서&lt;/em&gt; 기억술 효과 더 크게 나타남 (제약조건 있기 때문에)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;기억의 조직화&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이해와 기억&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;부호화&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;retrieval-인출&#34;&gt;Retrieval 인출&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;단기 기억의 인출 Retrieval in STM&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;병렬 vs 순차&lt;/li&gt;
&lt;li&gt;전체적 vs 자기종료적&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Sternberg&lt;/code&gt;
실험 : 숫자기억 탐지 숫자(probe) 제시 → 과제 → 반응시간 측정&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;얼마나 많은 숫자 기억했는가 (자극 세트의 크기)&lt;/li&gt;
&lt;li&gt;probe이 기억 리스트에 있었는가&lt;/li&gt;
&lt;li&gt;있었다면 리스트에서 몇 번째에 있었는가&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;결과 : 전체적 순차 처리 관찰&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Corcoran&lt;/code&gt;
병렬처리도 들어갈 수 있지 않나? → 증명 어렵&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Tulving &amp;amp; Pearlstone&lt;/code&gt;
실험 : 범주화된 단어 목록 제시
테스트1 : 자유회상-순서에 관계없이 단어 회상 (인출)
테스트2 : 각 범주 이름을 단서로 제시
결과 : 단서 회상 &amp;gt; 자유 회상
→ 회상 과제에서의 차이는 기억의 실패가 &amp;lsquo;저장&amp;rsquo;보다는 &amp;lsquo;인출&amp;rsquo; 실패임을 암시&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;장기 기억의 인출
순차, 병렬처리 모델이 공전하는 것으로 받아들여지고 있음. 과제와 사용되는 자극에 따라 달라짐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Bowers, Clark, Lesgold &amp;amp; Winzenz&lt;/code&gt;
실험 : 인출에 미치는 범주화의 영향
&lt;ul&gt;
&lt;li&gt;결과 : 조건1 (무작위 리스트) &amp;lt; 조건2 (범주화 리스트)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;인출-실패&#34;&gt;인출 실패&lt;/h3&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;간섭이론
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Brown-Perterson paradigm&lt;/code&gt;
실험 : 세게의 낱자로 이루어진 문자열 제시→ 3,6,8,12,15,18초 지났을 때마다 회상 검사
방해 : 지연시간 동안 무작위 3자리 숫자 제시, 3씩 빼는 과제 실시&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;결과 : Rehearsal 못하게 했을 때 18초 후에 거의 망각
→ 숫자 빼기 과제가 단기기억에서의 회상 방해. 단기기억의 망각이 간섭 때문이라는 증거&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;종류&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;역행 간섭 : 이전 학습 내용 ←방해- 다음에 하는 활동&lt;/li&gt;
&lt;li&gt;순행 간섭 : 앞서 제시 된 자료 -방해→ 이후의 학습
-부호화 시점과 인출 시점간 간격이 클 수록, 사전학습이 증가할수록 &lt;em&gt;순행 간섭 증가&lt;/em&gt;
-학습하는 정보의 종류가 달라지게 될 경우 → &lt;em&gt;순행간섭해제&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;계열위치곡선&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;초두효과- 역행간섭을 받지만 순행간섭이 없음&lt;/li&gt;
&lt;li&gt;최신효과- 순행간섭을 받지만 역행간섭이 없음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;소멸이론
기억은 대체되는 것이 아니라 점차 사라진다는 입장&lt;br&gt;
실험적 검증 어려움. ← 학습을 방해하지 않으면서 Rehearsal만 못하게 하는 과제 사용해야 함
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Reitman&lt;/code&gt;
실험 : 5개 단어 각 2초씩 제시. 15초간 음 탐지 과제 실시(간섭 일어나지 않는 과제)→ 단어 회상
&lt;ul&gt;
&lt;li&gt;결과 : 평균 약 25% 회상률 감소&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Berman, Jonides &amp;amp; Lewis&lt;/code&gt;
실험 : 4개의 표적단어 제시 → probe 단어 제시 → probe이 표적단어 중 하나와 일치하는지 판단. 반복&lt;br&gt;
probe :&lt;br&gt;
-(1)완전히 새로운 단어일 때 판단시간 : baseline&lt;br&gt;
-(2)비교적 최근 시행에 나온 단어와 일치할 때 : baseline + 50~100ms (간섭 효과)&lt;br&gt;
-(3)더 오래된 시행에 나온 단어와 일치할 때 : (2)보다 판단지연시간 짧음. Why?&lt;br&gt;
→ 지나간 시행에 대한 단어는 rehearsal할 필요가 없음→ 소멸 가능성 큼 (소멸 효과)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;간섭이 대부분의 망각 현상을 설명&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;기억의-구성적-특성&#34;&gt;기억의 구성적 특성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;다양한 책략을 사용해서 학습내용이나 경험 재구성&lt;/li&gt;
&lt;li&gt;사전 경험이 정보의 회상 방식, 내용에 영향을 준다 → 구성적(constructive) 특성
&lt;code&gt;Bransford &amp;amp; Johnson&lt;/code&gt; : 읽은 내용이 &amp;lsquo;세탁&amp;rsquo;과 관련있다고 알고 있을 때 읽은 글 잘 기억함&lt;br&gt;
&lt;code&gt;Bartlett&lt;/code&gt; : 북미 인디언 설화 읽게 함 → 자기 마음대로 왜곡하여 글 회상&lt;br&gt;
→ 핵심 정보는 잘 회상하지만 이해하지 못하거나 애매한 정보들은 망각&lt;br&gt;
→ 사전 지식과 기대가 회상에 영향을 미침&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;자전기억-autographical-memory&#34;&gt;자전기억 Autographical Memory&lt;/h2&gt;
&lt;p&gt;일화기억&lt;br&gt;
일반적으로 매우 우수&lt;br&gt;
인생의 시기에 따라 기억의 정도가 다름 (중년의 경우 최근 일보다 성인기 초기나 청년기 때를 더 잘 기억)&lt;/p&gt;
&lt;p&gt;자존감에 따른 자전 기억&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;긍정적 자존감 : 긍정적 사건을 더 잘 기억&lt;/li&gt;
&lt;li&gt;부정적 자존감 : 부정적 사건을 더 잘 기억&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;섬광기억&#34;&gt;섬광기억&lt;/h2&gt;
&lt;p&gt;매우 강력해서 사진을 찍어놓은 것처럼 선명한 사건의 기억&lt;br&gt;
-why?&lt;br&gt;
수반되는 정서의 강도가 강하기 때문&lt;br&gt;
Rehearsal 반복의 효과 때문 (충격적 사건의 경험을 자주 말하거나 회상하는 경향이 있다)&lt;br&gt;
지각적으로 풍부한 정보를 주기 때문&lt;/p&gt;
&lt;h3 id=&#34;-처리-과정은-일반-기억과-다른가&#34;&gt;-처리 과정은 일반 기억과 다른가?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Yes :&lt;code&gt;Brown &amp;amp; Kulik&lt;/code&gt;&lt;br&gt;
매우 충격적인 사건에 의해서만 활성화되는 과정&lt;br&gt;
사건과 관련된 부분들에 대해서는 영구적 기록을 만들어낸다&lt;br&gt;
과거의 위협적 사건에 대한 기억을 통해 미래의 위험을 피하도록 하는 &lt;em&gt;생존 기능&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;No : &lt;code&gt;Neisser &amp;amp; Harsch&lt;/code&gt;&lt;br&gt;
다른 기억과 마찬가지로 &lt;em&gt;오류와 망각 발생&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-정확한가&#34;&gt;-정확한가?&lt;/h3&gt;
&lt;p&gt;기억의 정확도에 대한 확신은 강하지만, 실제로 다른 기억보다 더 신뢰할 수 있는지는 의심&lt;/p&gt;
&lt;h2 id=&#34;기억-왜곡&#34;&gt;기억 왜곡&lt;/h2&gt;
&lt;p&gt;기억의 구성 및 재구성 → 기억 왜곡으로 변질 될 수 있음&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Schacter&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;일시성 : 기억은 신속하게 사라짐&lt;/li&gt;
&lt;li&gt;방심 : 주의를 주지 않은 사건 기억 못함&lt;/li&gt;
&lt;li&gt;차단 : 기억해야 하는데 기억이 나지 않는다 (TOT)&lt;/li&gt;
&lt;li&gt;오귀인 : 읽거나 들은 내용의 출처를 기억하지 못함 (본 적 없는데 봤다고 함)&lt;/li&gt;
&lt;li&gt;피암시성 : 외부에 의해 기억 조작. 어떤 것을 보았을 것이라는 암시 받으면 본 것으로 기억&lt;/li&gt;
&lt;li&gt;편향 : 회상의 내용이 편향되는 경향&lt;/li&gt;
&lt;li&gt;지속성 : 하찮은 일이나 별로 기억하고 싶지 않은 일 심각한 것으로 기억 (단 한번의 실패)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;목격자 증언
목격자들이 기억을 복습할 떄 오류의 가능성이 매우 높다&lt;br&gt;
특정 사건에 대한 기억은 사건 이후에 습득된 정보에 의해 왜곡되기 쉽다 (오정보 효과)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Loftus &amp;amp; Palmer&lt;/code&gt;&lt;br&gt;
실험 : 두 차가 충돌하는 사고 장면 → 질문 단어: &amp;ldquo;박살났을 때&amp;rdquo; &amp;gt; &amp;ldquo;충돌했을 때&amp;rdquo;&lt;br&gt;
→ 단순히 한 단어를 바꾸는 것만으로도 인출이 영향을 받을 수 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Loftus, Miller, Burns&lt;/code&gt;&lt;br&gt;
목격 사건과 왜곡 정보간 간격이 증가할수록 왜곡이 더 쉽다&lt;br&gt;
최초의 기억 흔적이 시간경과와 함께 약해지고 다른 출처에서 온 정보들로 빈틈이 채워지기 때문&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Read, Connolly &amp;amp; Turtle&lt;/code&gt;&lt;br&gt;
암시 효과로 인해 완전히 잘못된 기억이 만들어질수 있다&lt;br&gt;
가상의 장면이나 사건에 대해 시각적 심상을 떠올리라는 지시문 → 가짜 기억 생성 가능&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Ceci &amp;amp; Bruck&lt;/code&gt;&lt;br&gt;
아동이 어릴수록 증언의 신뢰도는 더욱 낮아짐&lt;br&gt;
타인의 암시를 자기의 기억으로 믿는 경우가 많다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Kovera &amp;amp; Borgida&lt;/code&gt;&lt;br&gt;
목격자가 스트레스를 받는 상황에서 범죄를 목격할 때 오류 발생 가능성 높아진다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Roebers &amp;amp; Schneider&lt;/code&gt;&lt;br&gt;
사회적 압력이 있는 경우 목격자가 오류를 범할 가능성 높아진다&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##기억의 맥락효과
개인이 가진 &lt;code&gt;도식(schema)&lt;/code&gt; : 인지적 맥락 형성 → 새로운 정보의 통합과 조직화&lt;br&gt;
&lt;code&gt;정서&lt;/code&gt; : 부호화 맥락 형성 및 인출에 영향&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Baddely&lt;/code&gt;&lt;br&gt;
기억과 우울증) 우울증의 지속 ← 과거의 슬픈 경험을 더 잘 기억해서&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Godden &amp;amp; Baddeley&lt;/code&gt;&lt;br&gt;
실험 : 16명의 잠수부 : 40개의 단어 목록 (집단1-수심 6미터에서 암기/ 집단2- 물 밖에서)
&lt;ul&gt;
&lt;li&gt;결과 : 학습 장소와 동일한 장소에서 회상을 할 때 정확도 높아짐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;부호화-특정성&#34;&gt;부호화 특정성&lt;/h3&gt;
&lt;p&gt;기억항목을 어떻게 부호화했는지에 따라 해당 항목이 어떻게, 얼마나 잘 인출되는지 결정&lt;br&gt;
&lt;code&gt;Tulving&lt;/code&gt; : 기억정보와 함께 (물리적,정서적)맥락을 부호화한다&lt;/p&gt;
&lt;h2 id=&#34;기억상실증-amnesia&#34;&gt;기억상실증 Amnesia&lt;/h2&gt;
&lt;p&gt;외현기억의 심각한 손상&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;역행성 기억상실증&lt;br&gt;
심한 충격을 받기 &lt;del&gt;전에&lt;/del&gt; 있었던 사건들의 기억(외현기억)을 잃어버리는 증상&lt;/li&gt;
&lt;li&gt;순행성 기억상실증&lt;br&gt;
사고 이후 &lt;del&gt;새로운&lt;/del&gt; 기억을 형성하지 못하는 증상&lt;/li&gt;
&lt;li&gt;외현기억 : 매우 저조한 수행&lt;/li&gt;
&lt;li&gt;암묵기억 : 정상 수준 수행&lt;br&gt;
절차적 기억 과제에서는 학습에 의한 향상 보임&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Memory 기억</title>
        <link>https://spongebob03.github.io/p/memory-%EA%B8%B0%EC%96%B5/</link>
        <pubDate>Wed, 02 Oct 2019 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/memory-%EA%B8%B0%EC%96%B5/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;basic-process&#34;&gt;Basic process&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Encoding&lt;/code&gt;
감각정보를 &lt;em&gt;심적 표상&lt;/em&gt;으로 변형하여 기억속에 저장하는 과정&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Storage&lt;/code&gt;
부화화된 정보를 기억속에 유지하는 과정&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Retrieval&lt;/code&gt;
기억 속에 저장된 정보를 끄집어 내어 사용하는 과정&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;explicit-memory-외현기억&#34;&gt;Explicit memory (외현기억)&lt;/h2&gt;
&lt;p&gt;의식 수준에서의 기억
회상과제, 재인과제 모두 외현기억을 측정하는 과제&lt;/p&gt;
&lt;h2 id=&#34;implicit-memory-암묵기억&#34;&gt;Implicit memory (암묵기억)&lt;/h2&gt;
&lt;p&gt;기억정보를 사용하지만 이를 의식적으로 자각하지 않음.&lt;br&gt;
의도적으로 기억하려 하지 않아도 기억이 살아나는 것&lt;/p&gt;
&lt;p&gt;Procedural memory (절차기억): 학습된 기술, 자동화된 행동&lt;/p&gt;
&lt;h2 id=&#34;기억측정&#34;&gt;기억측정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Recall (회상)
서술형, 빈 칸 채우기, 단답형&lt;/li&gt;
&lt;li&gt;Recognition (재인)
선다형, OX문제&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-models-&#34;&gt;🎨 Models 🎨&lt;/h2&gt;
&lt;h3 id=&#34;multistore-model--atkinson--shiffrin&#34;&gt;Multistore model : Atkinson &amp;amp; Shiffrin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sensory Store&lt;/strong&gt;&lt;br&gt;
지속시간: 약 250~300msec
시각적 정보 -&amp;gt; 영사 저장소&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Short-term Store&lt;/strong&gt;&lt;br&gt;
일반적으로 시각적 보다는 &lt;strong&gt;청각&lt;/strong&gt;적으로 저장&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attention(주의)&lt;/li&gt;
&lt;li&gt;Rehearsal(되뇌기)&lt;/li&gt;
&lt;li&gt;Retrieval(인출)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Long-term Store&lt;/strong&gt;&lt;br&gt;
용량: 알 수 없음
저장 기간: 알 수 없음&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;level-of-processinglop--craik--lockhart&#34;&gt;Level of processing(LOP) : Craik &amp;amp; Lockhart&lt;/h3&gt;
&lt;p&gt;처리수준 모형
정보처리 수준의 깊에 따라 연속적 차원에서 일어나는 인지과정
정보처리 수준 깊을 수록 기억/인출의 가능성 높아진다&lt;/p&gt;
&lt;h3 id=&#34;working-memory-model&#34;&gt;Working Memory Model&lt;/h3&gt;
&lt;p&gt;작업 기억: 저장(~30sec) + 작업&lt;br&gt;
&lt;em&gt;저장된 정보를 가지고 조작을 할때, 장기기억에 있는 정보를 끌어와서 저장된 지식을 가지고 조작&lt;/em&gt;&lt;br&gt;
&lt;figure 
	&gt;
	&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Baddeley_working_memory.jpg/600px-Baddeley_working_memory.jpg&#34; &gt;
		&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Baddeley_working_memory.jpg/600px-Baddeley_working_memory.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;시공간 잡기장&lt;/strong&gt;
시각장면에서의 대상과 공간적 정보를 처리.&lt;br&gt;
신속하게 소멸됨. &amp;lt;- 소멸 방지하려면 Rehearsal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;음운 회로&lt;/strong&gt;&lt;br&gt;
(언어/ 비언어 소리/ 자신이 만들어내는 소리) 정보처리&lt;br&gt;
-음운저장소 : 정보저장 (~2초)
-발성하 되뇌기 : 소리 내지 않고 머리속으로 언어적으로 되뇌기 → 정보 유지
조음 억제: 발성하 되뇌기가 억제 되었을 때 새로운 정보 저장 안되는 현상. 정보 청각적일 때 더 심함&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;일화 완충기&lt;/strong&gt;&lt;br&gt;
최초의 작업기억 모형 제안 이후 약 25년 후 추가된 요소&lt;br&gt;
청각, 시각, 공간 정보 + 장기기억의 정보 조합, 저장이 되는 요소&lt;br&gt;
이전에는 연결된적 없는 개념이나 정보들 통합할 수 있도록 하는 기능&lt;br&gt;
(관련된 신경과학적 연구 아직 거의 없음)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;중앙 집행기&lt;/strong&gt;&lt;br&gt;
음운회로, 시공간 잡기장, 일화 완충기 및 장기긱억의 정보 &lt;strong&gt;통합&lt;/strong&gt; (저장하지는 않는다)&lt;br&gt;
적합한 자극에 초점. 주의 할당, 부정적 자극은 억제&lt;br&gt;
목표 달성을 위한 계획과 전략 수립&lt;br&gt;
정보의 변환 및 업데이트&lt;br&gt;
과제 간의 주의 전환 등의 기능&lt;br&gt;
뇌구조: 배외측 전전두피질&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;multiple-memory-system-model--endel-tulving&#34;&gt;Multiple Memory System Model : Endel Tulving&lt;/h3&gt;
&lt;p&gt;두 가지 독립적인 외현기억 시스템 제안&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;의미기억: 세상에 대한 지식. 개인적이거나 특정 시간 맥락에 따르지 않는 사실에 대한 기억&lt;/li&gt;
&lt;li&gt;일화기억: 개인적으로 경험한 사건이나 일화 저장. 시간 정보를 포함하고 있는 체계화된 기억&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;기억체계-분류--squire&#34;&gt;기억체계 분류 : Squire&#39;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;기억
&lt;ul&gt;
&lt;li&gt;선언기억(=서술기억=외현기억)
&lt;ul&gt;
&lt;li&gt;의미기억&lt;/li&gt;
&lt;li&gt;일화기억&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;비선언기억(=암묵기억)
&lt;ul&gt;
&lt;li&gt;절차적기억 - 운동, 기술&lt;/li&gt;
&lt;li&gt;점화
&lt;ul&gt;
&lt;li&gt;지각적&lt;/li&gt;
&lt;li&gt;의미적&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;조건형성&lt;/li&gt;
&lt;li&gt;비연합학습
&lt;ul&gt;
&lt;li&gt;습관화&lt;/li&gt;
&lt;li&gt;민감화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pdp-병렬분산처리-모형&#34;&gt;PDP (병렬분산처리 모형)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;node&lt;/code&gt; 개념 사용&lt;/p&gt;
&lt;p&gt;기억된 정보는 각각의 마디에 존재하는 것이 아니고! 다양한 마디들 간의 &lt;em&gt;연결 방식에 의해&lt;/em&gt; 결정된다.&lt;/p&gt;
&lt;p&gt;활성화 확산: 한마디 활성화 → 연결되어 있는 다른 마디도 활성화&lt;br&gt;
활성화 패턴 반복되면 → 강화되어 지식으로 저장됨&lt;/p&gt;
&lt;p&gt;&lt;em&gt;뉴런과 비슷한 원리&lt;/em&gt; : 뉴런 하나하나에 감정, 기능 저장된 것이 아니라 (뉴런은 활동 일으키거나, 안 일으키거나, 억제되거나 이 3가지이다) 어떤 패턴을 이루고 어떤 패턴으로 활동을 하느냐에 따라 우리 행동 달라진다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PDP model이 잘 설명하는 이론/현상&lt;/p&gt;
&lt;p&gt;작업기억 : 수식을 보고 연산에 대한 규칙 생각해 내는 것. “작업기억은 장기기억의 활성화된 부분을 포함한다”&lt;/p&gt;
&lt;p&gt;점화효과 : 점화자극(연결된 마디를 활성화시키는 마디)→ node 활성화 → 표적자극 나타났을 때 더 빠르게 반응&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;지지 : 인간이 효율적 정보처리를 하는 이유 다수의 처리를 병렬적으로 하기 때문&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;한계 : 인간의 사고과정은 보다 더 체계적 통합적임.&lt;/p&gt;
&lt;p&gt;하향처리 과정 잘 반영하고 있지 않다. (단 한 번의 경험이나 정보 학습으로 일어나는 재인, 회상 설명 불가)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Attention 주의</title>
        <link>https://spongebob03.github.io/p/attention-%EC%A3%BC%EC%9D%98/</link>
        <pubDate>Tue, 10 Sep 2019 22:09:48 +0900</pubDate>
        
        <guid>https://spongebob03.github.io/p/attention-%EC%A3%BC%EC%9D%98/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;(감각, 저장된 기억, 다른 인지적 과정을 통해) 이용가능한 엄청난 양의 정보로부터 제한된 양의 정보를 집중적으로 처리 할 수 있게 해주는 수단&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;장점 : 한정된 정신적 자원을 효율적으로 사용하게 해준다&lt;br&gt;
주의 과정의 일부는 의식적 자각 없이도 진행&lt;/p&gt;
&lt;h2 id=&#34;consciousness-의식&#34;&gt;Consciousness 의식&lt;/h2&gt;
&lt;p&gt;외부 세계와 자기 자신의 지각, 이미지, 사고, 기억, 감정에 대해 가지는 자각&lt;/p&gt;
&lt;p&gt;주의 ≠ 의식&lt;/p&gt;
&lt;p&gt;주의 과정 중 통제처리, 초점 주의 등의 유형과 관련&lt;/p&gt;
&lt;h3 id=&#34;conscious-attention-의식적-주의&#34;&gt;conscious attention 의식적 주의&lt;/h3&gt;
&lt;p&gt;상황에 대한 지각. 과거와 현재의 연결 → 미래 행동의 예측과 통제&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;연구 논제1: 자신의 사고 과정을 의식 속으로 가져오는 능력&lt;br&gt;
의식의 정신 과정에 대한 접근 - 쉽지 않다&lt;br&gt;
예)내 이름은? 어떻게 그 질문에 답할 수 있었는가? (&amp;hellip;그냥..?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;연구 논제2: 사고를 의식으로부터 멀어지게 할 수 있는가?&lt;br&gt;
의식의 내용을 통제할 수 있나 - 쉽지 않다&lt;br&gt;
&lt;code&gt;사고 억압&lt;/code&gt; : &lt;em&gt;(예)절대로 백곰에 대해 생각하지 않기&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;연구 논제3: 의식적 자각이 없어도 정보 처리 가능한가?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blindsight 맹시&lt;br&gt;
시각 피질 손상으로 의식적으로는 볼 수 없는 상태&lt;br&gt;
어떤 대상의 특징을 우연 수준 이상으로 정확하게 묘사하는 시각 장애 유형&lt;br&gt;
눈(망막)-x→ 시상 but &lt;code&gt;눈(망막) → 중뇌 → 선조외피질&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;preconscious-processing-전의식적-처리&#34;&gt;Preconscious processing 전의식적 처리&lt;/h2&gt;
&lt;p&gt;의식적 자각 없이 일어나는 정보처리&lt;br&gt;
인지과정에 이용 가능하지만 &lt;em&gt;의식적 자각 범위 밖에 있는&lt;/em&gt; 정보&lt;br&gt;
당장 사용하지 않지만 필요할 때 불러올 수 있는 정보 포함&lt;/p&gt;
&lt;h3 id=&#34;priming-점화&#34;&gt;Priming 점화&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;점화자극 : 의식적 or 전의식적. 표적자극과 동일하거나 유사한 처리를 요구하는 자극&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;정적 점화효과가 있는 경우 반응시간의 단축 관찰됨&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Marcel&lt;/code&gt;&lt;br&gt;
실험 : 점화자극[ 눈 ] → 표적 자극 [ 입 ] or [ 비 ] 제시 → 날씨인가 신체 일부인가?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;순간적 점화자극(의식수준 X) → 두 의미 모두 &lt;em&gt;정적 점화 효과&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;점화자극 (의식수준 O) → &lt;em&gt;정적점화효과, 부적점화효과&lt;/em&gt;&lt;br&gt;
→ 전의식적 / 의식적 처리 과정에서의 차이를 보여줌. 점화는 자극 처리를 촉진시킬 수도, 방해할 수도&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Bowers et al&lt;/code&gt;&lt;br&gt;
두 쌍의 세 단어 실험 : 단어묶음1 단어묶음2 단어제시3 → 어떤 묶음이 서로 관련되고 응집적이며 세번째로 제시된 단어와 관련있는가? 단어제시3에서 어느 단어가 응집적이라고 생각되는 단어 묶음과 관련되는가?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;결과 : 많은 참가자들이 어느 쪽 단어 묶음이 응집적인 목록인지도 모르고 관련된 세번째 단어 못 찾음. 우연 수준 이상으로 묶음1을 택하긴 함.&lt;br&gt;
→ 어떤 단어가 묶음1과 관련되는지 의식적으로 떠올리지 못해도 단어묶음1에 있는 단어들은 &lt;em&gt;일관성이 있는&lt;/em&gt; 것으로 전의식적 처리가 되었다는 증거.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;전의식---의식&#34;&gt;전의식 -/→ 의식&lt;/h3&gt;
&lt;p&gt;전의식적 정보를 의식적 수준으로 끌어올리는 것이 쉽지 않을 때도 있다&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tip-of-the-tongue phenomenon&lt;/code&gt; 설단현상&lt;br&gt;
기억에 저장된 정보가 있다는 것을 알지만 인출해서 말할 수 없는 현상&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Brown &amp;amp; McNeill&lt;/code&gt;&lt;br&gt;
실험 : 사전적 정의 들려주고 → 그 의미에 해당되는 단어 보고하도록 → 설단현상 보인 사람들 선택→ 질문 추가
&lt;ul&gt;
&lt;li&gt;결과 : 대부분 정확하게 반응, 몇 몇은 질문 받는 도중 떠올리는데 성공&lt;br&gt;
→ 특정 전의식적 정보가 의식적 영역에 들어오지 못하더라도 여전히 주의과정에 이용 가능함을 암시&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;전의식적 처리 결론&lt;/strong&gt; : 의식적 자각이 없어도 다양한 감각자극들을 감지하고 지각하며 반응할 수 있는 경우가 있다. 어떤 종류의 처리에 의식적 자각이 불필요 or 필요? ↓&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;비교&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Controlled processing&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Automatic processing&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;의도적 노력&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;필요&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;불필요&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;의식적 자각&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;완전한 자각 요구&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;대부분 의식적 자각 없이 수행&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;주의 자원&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;많이 사용&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;거의 X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;처리 유형&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;계열적, 순차적&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;병렬처리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;처리 속도&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;상대적으로 늦다&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;빠름&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;과제&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;친숙하고 숙달. 단순하거나 엄청 연습한 것&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;낯설고 훈련되지 않은 과제, 변화가 많은 과제&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;처리수준&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;상대적으로 깊다&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;얕다&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;automatization-자동화&#34;&gt;Automatization 자동화&lt;/h2&gt;
&lt;p&gt;(=proceduralization 절차화)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Anderson&lt;/code&gt; Integrated components theory&lt;br&gt;
연습과정 반복 → 노력(의식, 통제) 요구되는 각 단계들 점차 &lt;em&gt;통합&lt;/em&gt; → 하나의 절차&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Logan&lt;/code&gt;&lt;br&gt;
&lt;em&gt;지식 축적&lt;/em&gt; → 자동화&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;stroop-task&#34;&gt;Stroop task&lt;/h3&gt;
&lt;p&gt;수행 어려운 이유&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lsquo;단어 읽기&amp;rsquo;가 자동화된 과정이기 때문 → 색깔에 집중하는 것 어려움&lt;/li&gt;
&lt;li&gt;색에 대한 &amp;lsquo;반응통로&amp;rsquo;의 활성화에 시간이 걸리기 때문&lt;br&gt;
단어 경로의 방해로&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;error-자동화-오류&#34;&gt;Error 자동화 오류&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mistake 실수&lt;br&gt;
목표 설정 or 목표를 위한 수단 설정에서의 오류&lt;br&gt;
예) 시험 범위 과소평가 → 주말에 공부 안함 → 망함&lt;br&gt;
주로 의도적, 통제 처리에서의 오류&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slip 깜빡하기, 간과&lt;br&gt;
목표를 위한 수단 실행에서의 오류&lt;br&gt;
예) 공부하러 도서관 갔는데 다른책 가져와버림;;&lt;br&gt;
주로 자동처리에서의 오류와 관련&lt;br&gt;
자동처리과정 동안 방해 또는 간섭이 있을 때 흔하게 발생&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Types of error (ppt.93)&lt;/li&gt;
&lt;li&gt;원인 : 인지체계의 실패, 사람들이 사용하는 시스템의 설계 실패&lt;/li&gt;
&lt;li&gt;방지 : 유사한 행동을 요구하는 대상들을 상이한 형태, 색으로 구별되도록 설계&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
