<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on BeMore</title>
    <link>https://spongebob03.github.io/post/</link>
    <description>Recent content in Posts on BeMore</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Dec 2021 19:09:48 +0900</lastBuildDate><atom:link href="https://spongebob03.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo Blog with Custom Domain</title>
      <link>https://spongebob03.github.io/p/hugo-blog-with-custom-domain/</link>
      <pubDate>Mon, 06 Dec 2021 19:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/hugo-blog-with-custom-domain/</guid>
      <description>github.io 주소도 좋지만 간단하고 나만의 도메인 주소를 만들어서 쓰고 싶었다.
도메인 구매 구매 사이트 비교(.dev 도메인 비용으로 찾아봤을 때 1년 비용. 기간에 따라 더 비싸지는 곳도 있다고 한다. 구매 전 기간을 설정하고 확인하자.)
원화 가격은 편의를 위해 만단위로 표시
   사이트 1년 가격     google domain $12   namecheap $14.98   gandi €14.01   godaddy 2,3890₩   gabia 2,9000₩    이 중 google이니 ad, analytics 사용할 때도 편하지 않을까 하는 기대로 google domain으로 정했다.</description>
    </item>
    
    <item>
      <title>Hugo로 개발 블로그 장만하기</title>
      <link>https://spongebob03.github.io/p/hugo%EB%A1%9C-%EA%B0%9C%EB%B0%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%9E%A5%EB%A7%8C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 02 Dec 2021 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/hugo%EB%A1%9C-%EA%B0%9C%EB%B0%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%9E%A5%EB%A7%8C%ED%95%98%EA%B8%B0/</guid>
      <description>SSG(Static site generator) 중 Hugo를 사용하여 블로그를 만들었다. 처음에 뭐가 뭔지 몰라서 뚱땅뚱땅 만들었다. 호스팅까지 하는데 하루 걸렸고 더 빠르게 할 수 있었지만 역시 세팅에서 시행착오를 겪었다. 그나마 Hugo여서 하루만에 할 수 있었던걸수도&amp;hellip; Hugo는 Go로 만들어져서 나중에 Go에 대해서 더 공부해보고 싶다.
github.io 만들기 Hugo 설치하기 brew install hugo
hugo version
사이트 폴더 만들기 hugo new site blog
테마 붙이기 태그, 카테고리 잘보이는 테마가 안보여서 그나마 stack 테마가 제일 내가 원하는 템플릿이었다.</description>
    </item>
    
    <item>
      <title>주요 추천 알고리즘</title>
      <link>https://spongebob03.github.io/p/%EC%A3%BC%EC%9A%94-%EC%B6%94%EC%B2%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 19 Nov 2021 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/%EC%A3%BC%EC%9A%94-%EC%B6%94%EC%B2%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>1. Content-Based filtering: CB  비슷한 아이템을 기반으로 추천
  도메인 지식 필요 아이템 간의 유사도 측정하여 추천 모든 이에게 동일한 아이템을 추천 보통 아이템, 사용자 수가 적다 hand-engineered features에서만 성능 좋음 텍스트 처리 필요하기도 함(NLP) - 예.작가의 다른 책  핵심
 아이템들을 어떤 정보를 기준으로 서술할 건가 유사소 계산 방법 정하기 (코사인, 피어슨&amp;hellip;)  2. Collaborative Filtering: CF  기본적으로 다른 사용자들의 정보를 이용하여 취향 예측
 1) 메모리 기반 (=Nearest Neighbor based CF) - 👨‍👩‍👧‍👦 사용자 기반 나와 비슷한 평점 패턴을 보이는 사람들을 찾아서 그 사람들이 높게 평가한 아이템 추천</description>
    </item>
    
    <item>
      <title>추천시스템이란?</title>
      <link>https://spongebob03.github.io/p/%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80/</link>
      <pubDate>Tue, 09 Nov 2021 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80/</guid>
      <description>사용자가 관심있어 할만한 아이템을 제공해주는 자동화된 시스템
  핵심  관심을 어떻게 표현하는가? 관심을 어떻게 측정하는가? =&amp;gt; 유사도 측정    사용자와 아이템  사용자: 서비스를 사용하는 사람 아이템: 서비스에서 판매하는 물품(다른 사용자가 물품이 될 수 있음) 보통 서비스가 성장하면 사용자, 아이템의 수도 같이 성장함  특히 사용자의 성장도가 훨씬 커짐   하지만 아이템의 수가 커지면서 아이템 디스커버리 문제가 대두  모든 사용자가 검색(능동적)을 하지 않으며 사람들이 점점 더 추천(수동적) 선호    필요성  조금의 노력으로 사용자가 관심있어 할만한 아이템을 찾아주는 방법  아이템의 수가 굉장히 큰 경우 더 의미가 있다 수작업으론&amp;hellip;도저히 불가 → 자동화 필요!</description>
    </item>
    
    <item>
      <title>파이토치 허브 M1 로컬에서 빌드하기</title>
      <link>https://spongebob03.github.io/p/%ED%8C%8C%EC%9D%B4%ED%86%A0%EC%B9%98-%ED%97%88%EB%B8%8C-m1-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 16 Aug 2021 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/%ED%8C%8C%EC%9D%B4%ED%86%A0%EC%B9%98-%ED%97%88%EB%B8%8C-m1-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</guid>
      <description>Github) PyTorchKR
 nvm: command not found 노드 버전관리 설치 및 사용법
 find ~/.zshrc로 /.zshrc파일 있는지 확인 open ~/.zshrc 파일 열어서 아래 내용 추가  export NVM_DIR=~/.nvm source $(brew --prefix nvm)/nvm.sh source ~/.zshrc 코드 적용 nvm &amp;ndash;version으로 확인  rbenv: version `2.5.9&#39; is not installed brew install rbenv했지만 [이걸 또 m1이..?] (https://github.com/rbenv/ruby-build/issues/1691) 해결 방법은 간단했습니다. rbenv install 2.5.9
ERROR: While executing gem&amp;hellip;Gem::FilePermissionError Mac에서 Gem::FilePermissionError 에러 발생시 해결 방법 ~/.</description>
    </item>
    
    <item>
      <title>SlackBot으로 랜덤 문제 출제</title>
      <link>https://spongebob03.github.io/p/slackbot%EC%9C%BC%EB%A1%9C-%EB%9E%9C%EB%8D%A4-%EB%AC%B8%EC%A0%9C-%EC%B6%9C%EC%A0%9C/</link>
      <pubDate>Sun, 08 Aug 2021 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/slackbot%EC%9C%BC%EB%A1%9C-%EB%9E%9C%EB%8D%A4-%EB%AC%B8%EC%A0%9C-%EC%B6%9C%EC%A0%9C/</guid>
      <description>스터디에서 4주 동안 배운 알고리즘 유형 문제를 정해진 시간에 풀어보는 모의 코딩테스트를 진행하고 싶었다. 백준 문제를 배운 알고리즘 내에서 랜덤으로 출제하는 슬랙 챗봇을 사용하면 재밌을거 같았다. 백준 사이트는 웹 스크래핑이 금지된다고 공지가 되어있어 solved.ac의 알고리즘 유형 카테고리 정보를 긁어오는 식으로 문제를 뽑아왔다. 혹시 이것도 문제가 되는지 문의해봐야겠다&amp;hellip;
사용 라이브러리  BeautifulSoup slack_sdk  데이터 긁어오기  
출제 유형 랜덤 선택, 문제 랜덤 선택 tag의 랜덤 범위가 5인 이유는 5개 알고리즘을 배워서&amp;hellip;</description>
    </item>
    
    <item>
      <title>MacMini M1 에서 Homebrew 설치</title>
      <link>https://spongebob03.github.io/p/macmini-m1-%EC%97%90%EC%84%9C-homebrew-%EC%84%A4%EC%B9%98/</link>
      <pubDate>Tue, 08 Jun 2021 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/macmini-m1-%EC%97%90%EC%84%9C-homebrew-%EC%84%A4%EC%B9%98/</guid>
      <description>Homebrew? 그냥 사이트에서 다운받는거랑 뭐가 다른가요?
macOS용 패키지 매니저로 프로그램 설치, 업데이트, 삭제를 편하게 관리할 수 있다. (하지만 윈도우만 쓰던 나는 나중에 알았다..)
M1 네이티브로 설치하려 했으나..실패! 그냥 뭔가 커맨드가 안먹혀서 의문이었는데 기존 MAC을 위한 안내는 기존 실리콘칩. 내 컴퓨터는 m1칩이라 그런 것이었다.
🛠해결 M1 네이티브로 설치하는 방법도 있으나 이전 맥 터미널과 동일하게 호환할 수 있는 Rosetta를 사용하는 방법이 제일 간단했다.
 터미널앱 &amp;gt; 정보 가져오기&amp;gt; ☑️ Rosetta를 사용하여 열기 Homebrew 설치 /bin/bash -c &amp;quot;$(curl -fsSL https://raw.</description>
    </item>
    
    <item>
      <title>2020년 회고</title>
      <link>https://spongebob03.github.io/p/2020%EB%85%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Wed, 30 Dec 2020 14:58:14 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/2020%EB%85%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>코로나 이&amp;hellip; 미친 코로나 때문에&amp;hellip; 1년이 날아간 기분이다. 주어진 처지에서 최선을 다했으니 후회는 없지만 그래도 아쉬움이 없는 것은 아니다.
졸업 프로젝트 졸업 프로젝트때 되면 선배들처럼 엄청난걸 척척 해낼 줄 알았다. 하지만 나는 여전히 똑같았다&amp;hellip; 더군다나 코로나로 대면수업도 못하는데 팀 프로젝트를 진행하려니 심란했다. 그나마 다행인건 친한 동기들과 해서 모임 약속 잡는게 수월했다. 프로젝트 하면서 내 이상과 현실이 같지 않아서 마치 더닝크루거 그래프의 절망의 계곡에서 허덕였다. 화상 회의 프로그램을 잘 활용하는 것이 코로나 속에서 팀플하는 사람에게 미덕이 될 수 있었다.</description>
    </item>
    
    <item>
      <title>2019년 회고</title>
      <link>https://spongebob03.github.io/p/2019%EB%85%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Tue, 31 Dec 2019 14:58:04 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/2019%EB%85%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>운동🏃 태권도. 8월까지 방학에는 태권도장에 다니면서 처음보다 확실히 좋아졌다. 하지만 학기 중에 운동을 위해 집에 자주 오는 것도 부담되서 2학기에 소모임을 만들어 주 3회 운동하려고 했으나&amp;hellip;모임을 지속적으로 유지하는 것도 쉽지 않았고 내가 유단자가 아니어서 역량도 없는 상태였다. 회비를 걷지 않고 자율적인 참여여서 참여율은 많이 떨어졌지만 금전 문제가 없는 것이 차라리 다행이었다. 이렇게 부족한 소모임 운영이었지만 참여해준 모든 모임원들에게 정말 고마울 뿐이다. 특히 그냥 모임원이었는데 운영자보다 더 많은 부분 맡아야했던 다른과 후배님,,,나와 같은 초급자들 기본자세, 품새를 가르쳐줬다.</description>
    </item>
    
    <item>
      <title>Memory Process 기억 과정</title>
      <link>https://spongebob03.github.io/p/memory-process-%EA%B8%B0%EC%96%B5-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Wed, 02 Oct 2019 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/memory-process-%EA%B8%B0%EC%96%B5-%EA%B3%BC%EC%A0%95/</guid>
      <description>Memory Process 단기기억의 부호화  Conrad 실험 : 발음 비슷한 다른 글자 혼동→자극 시각적으로 제시되었어도 기억 오류 청각적 혼동 가능성있다  결론 : 자극이 시각적이든 청각적이든 단기기억 부호화할때 청각적 코드 사용   Baddeley : 의미정보는? 실험 1 : 유사한 소리 나는 단어들 / 소리 구별되는 단어들 → 유사한 소리 헷갈림 실험 2 : 의미 유사 단어 / 의미 차이 자극 → 별 차이 없음  결과 : Conrad가 맞네&amp;hellip;   Shulman 실험 : 청각적으로 유사(Bawl,Ball) / 의미상 유사(Talk,Speak) / 리스트에 있는 단어  결과 : 둘다 비슷하게 나옴 → 청각적 부호화 의미 부호화 모두 사용됨   Posner &amp;amp; Keele 실험 : 두 개의 글자 같은 글자인가 판단 A-a : Yes로 대답 &amp;lt; A-A : Yes로 대답시간 더 빠름  결과 : 시각 부호화도 안쓰는건 아니다    결론 : 주로 청각 부호화.</description>
    </item>
    
    <item>
      <title>Memory 기억</title>
      <link>https://spongebob03.github.io/p/memory-%EA%B8%B0%EC%96%B5/</link>
      <pubDate>Wed, 02 Oct 2019 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/memory-%EA%B8%B0%EC%96%B5/</guid>
      <description>Basic process  Encoding 감각정보를 심적 표상으로 변형하여 기억속에 저장하는 과정 Storage 부화화된 정보를 기억속에 유지하는 과정 Retrieval 기억 속에 저장된 정보를 끄집어 내어 사용하는 과정  Explicit memory (외현기억) 의식 수준에서의 기억 회상과제, 재인과제 모두 외현기억을 측정하는 과제
Implicit memory (암묵기억) 기억정보를 사용하지만 이를 의식적으로 자각하지 않음.
의도적으로 기억하려 하지 않아도 기억이 살아나는 것
Procedural memory (절차기억): 학습된 기술, 자동화된 행동
기억측정  Recall (회상) 서술형, 빈 칸 채우기, 단답형 Recognition (재인) 선다형, OX문제  🎨 Models 🎨 Multistore model : Atkinson &amp;amp; Shiffrin   Sensory Store</description>
    </item>
    
    <item>
      <title>Attention 주의</title>
      <link>https://spongebob03.github.io/p/attention-%EC%A3%BC%EC%9D%98/</link>
      <pubDate>Tue, 10 Sep 2019 22:09:48 +0900</pubDate>
      
      <guid>https://spongebob03.github.io/p/attention-%EC%A3%BC%EC%9D%98/</guid>
      <description>(감각, 저장된 기억, 다른 인지적 과정을 통해) 이용가능한 엄청난 양의 정보로부터 제한된 양의 정보를 집중적으로 처리 할 수 있게 해주는 수단
 장점 : 한정된 정신적 자원을 효율적으로 사용하게 해준다
주의 과정의 일부는 의식적 자각 없이도 진행
Consciousness 의식 외부 세계와 자기 자신의 지각, 이미지, 사고, 기억, 감정에 대해 가지는 자각
주의 ≠ 의식
주의 과정 중 통제처리, 초점 주의 등의 유형과 관련
conscious attention 의식적 주의 상황에 대한 지각.</description>
    </item>
    
  </channel>
</rss>
